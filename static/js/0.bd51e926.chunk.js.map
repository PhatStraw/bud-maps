{"version":3,"sources":["Components/Viewer/RLottie.js"],"names":["RLottie","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this","_this$props","this","props","options","eventListeners","loop","autoplay","animationData","stringData","queueLength","container","el","Boolean","_objectSpread","window","loadAnimation","anim","hasFirstFrame","forEach","_ref","eventName","callback","registerEvents","prevProps","prevState","snapshot","_this2","_this$props2","prevOptions","prevEventListeners","fileId","unregisterEvents","destroy","url","_ref2","blob","play","segments","forceFlag","playSegments","get","isPaused","pause","_this3","_ref3","addEventListener","_this4","_ref4","removeEventListener","_this5","_this$props3","width","height","ariaRole","ariaLabel","title","onClick","onMouseEnter","onMouseOut","style","lottieStyles","overflow","outline","React","createElement","role","aria-label","tabIndex","ref","c","className","Component"],"mappings":"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","file":"static/js/0.bd51e926.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './RLottie.css';\n\nclass RLottie extends React.Component {\n    componentDidMount() {\n        const { options, eventListeners } = this.props;\n\n        const {\n            loop,\n            autoplay,\n            animationData,\n            stringData,\n            queueLength\n        } = options;\n\n        this.options = {\n            container: this.el,\n            loop: Boolean(loop),\n            autoplay: Boolean(autoplay),\n            animationData,\n            stringData,\n            queueLength\n        };\n\n        this.options = { ...this.options, ...options };\n        window.RLottie.loadAnimation(this.options, anim => {\n            this.anim = anim;\n\n            if (window.RLottie.hasFirstFrame(this.anim)) {\n                if (!eventListeners) return;\n\n                eventListeners.forEach(({ eventName, callback }) => {\n                    if (eventName === 'firstFrame') {\n                        callback && callback();\n                    }\n                });\n            }\n        });\n        this.registerEvents(eventListeners);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { options, eventListeners } = this.props;\n        const { options: prevOptions, eventListeners: prevEventListeners } = prevProps\n\n        // const data = options.animationData;\n        // const prevData = prevOptions.animationData;\n        // const fileId = options.fileId;\n        // const prevFileId = prevOptions.fileId;\n        if (options.animationData !== prevOptions.animationData || options.fileId !== prevOptions.fileId) {\n            // console.log('[RLottie] update', [fileId, data], [prevFileId, prevData], [options.animationData !== prevOptions.animationData, options.fileId !== prevOptions.fileId])\n            this.unregisterEvents(prevEventListeners);\n            this.destroy();\n\n            this.options = { ...this.options, ...options };\n            // console.log('[RLottie] update loadAnimation start', [fileId, data]);\n            const url = this.props.options.url;\n            window.RLottie.loadAnimation(this.options, anim => {\n                this.anim = anim;\n                // console.log('[RLottie] update loadAnimation stop', anim, [fileId, data]);\n                // if (this.props.options.url === url) {\n                //     this.anim = anim;\n                // } else {\n                //     window.RLottie.destroy(anim);\n                // }\n                if (!eventListeners) return;\n\n                eventListeners.forEach(({ eventName, callback }) => {\n                    if (eventName === 'firstFrame') {\n                        callback && callback();\n                    }\n                });\n            });\n            this.registerEvents(eventListeners);\n        }\n    }\n\n    componentWillUnmount() {\n        this.unregisterEvents(this.props.eventListeners);\n        this.destroy();\n        this.options.blob = null;\n        this.options.container = null;\n        this.options = null;\n        this.anim = null;\n    }\n\n    play() {\n        // console.log('[Rlottie] play');\n        window.RLottie.play(this.anim);\n        // this.anim.play();\n    }\n\n    playSegments(segments, forceFlag) {\n        window.RLottie.playSegments(this.anim, segments, forceFlag);\n        // this.anim.playSegments(segments, forceFlag);\n    }\n\n    get isPaused() {\n        if (!this.anim) {\n            return false;\n        }\n\n        return window.RLottie.isPaused(this.anim);\n    }\n\n    pause() {\n        if (!window.RLottie.isPaused(this.anim)) {\n            window.RLottie.pause(this.anim);\n            return true;\n        }\n\n        return false;\n    }\n\n    destroy() {\n        // console.log('[RLottie] destroy', this.anim);\n        if (!this.anim) return;\n\n        window.RLottie.destroy(this.anim);\n        // this.anim.destroy();\n    }\n\n    registerEvents(eventListeners) {\n        // console.log('[Rlottie] registerEvents', [this.anim, eventListeners]);\n\n        if (!this.anim) return;\n\n        if (!eventListeners) return;\n\n        eventListeners.forEach(({ eventName, callback }) => {\n            window.RLottie.addEventListener(this.anim, eventName, callback);\n        });\n    }\n\n    unregisterEvents(eventListeners) {\n        if (!this.anim) return;\n\n        if (!eventListeners) return;\n\n        eventListeners.forEach(({ eventName, callback }) => {\n            window.RLottie.removeEventListener(this.anim, eventName, callback);\n        });\n    }\n\n    render() {\n        const {\n            width,\n            height,\n            ariaRole,\n            ariaLabel,\n            title,\n            onClick,\n            onMouseEnter,\n            onMouseOut,\n            style\n        } = this.props;\n\n        const lottieStyles = {\n            width: width || '100%',\n            height: height || '100%',\n            overflow: 'hidden',\n            // margin: '0 auto',\n            outline: 'none',\n            ...style\n        };\n\n        return (\n            <div\n                style={lottieStyles}\n                title={title}\n                role={ariaRole}\n                aria-label={ariaLabel}\n                tabIndex='0'\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseOut={onMouseOut}\n            >\n                <picture\n                    ref={c => this.el = c}\n                    className='dev_page_tgsticker tl_main_card_animated js-tgsticker_image'>\n                </picture>\n            </div>\n        );\n    }\n}\n\nRLottie.propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    options: PropTypes.object\n};\n\nexport default RLottie;"],"sourceRoot":""}