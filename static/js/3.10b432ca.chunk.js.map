{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Utils/Game.js","Components/Actions.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","_this","options","arguments","length","undefined","_classCallCheck","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","_createClass","key","value","n","sin","PI","StickerPreview","_React$Component","_inherits","_super","_createSuper","_len","args","Array","_key","call","apply","concat","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","React","createElement","className","Sticker","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","SnackbarProvider","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","_this2","_this$props","params","t","title","message","ok","cancel","getFormattedText","Dialog","open","manager","modalManager","transitionDuration","classes","paper","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","_this$state","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","_step","prevMessageIds","_iterator","_createForOfIteratorHelper","s","done","messageId","MessageStore","err","e","f","InputPasswordDialog","handleChange","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","Visibility","VisibilityOff","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","Fragment","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","openGameInBrowser","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","window","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","newWindow","opener","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Actions","_React$PureComponent","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","sender_id","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","_ref","_asyncToGenerator","_callee","undo","_ref2","requests","_args","_context","_assertThisInitialized","getLeaveChatNotification","isChatMember","isCreator","status","is_member","_x","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","_this$props2","_ref3","_callee2","_context2","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","_pinMessage","pinMessageAction","_ref4","_callee3","_unpinMessage","data","_context3","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","getClientData","clientData","_objectSpread","unpinned","_x2","handleAlertContinue","onResult","event","preventDefault","handleRequestUrlContinue","_ref5","_callee4","buttonId","httpUrl","_context4","message_id","button_id","allow_write_access","_x3","_x4","_x5","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","_ref6","_callee5","reason","_context5","t0","blockSender","reportChat","canDeleteChat","_x6","_x7","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","CloseIcon","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","_copy","navigator","clipboard","writeText","console","copyOld","element","successful","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","_unused","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","devices","outputDeviceId","inputAudioDeviceId","inputAudio","inputVideoDeviceId","inputVideo","mediaDevices","enumerateDevices","CallStore","getOutputDeviceId","filter","kind","deviceId","getInputAudioDeviceId","getInputVideoDeviceId","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","currentCall","inputAudioStream","_this$state2","_inputAudioStream","_stream","_this$state3","inputVideoStream","_stream2","setOutputDeviceId","streamManager","getAudioTracks","getStream","audio","exact","getVideoTracks","handleEnd","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","_this$state4","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","_this$state5","callId","_this$state6","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","_this3","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","MenuIcon","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOffIcon","VideocamIcon","VideocamOffIcon","CallEndIcon","p2pIsCallReady","CallIcon","MicIcon","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","_this$normalizePositi","normalizePosition","_assertThisInitialize","startLeft","startTop","_this$normalizePositi2","setPosition","pipParams","documentElement","clientWidth","clientHeight","_pipParams","prevLeft","prevTop","_this$normalizePositi3","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","CheckDecagramIcon","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","ArrowBackIcon","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","_Notifications","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","_this$resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","_this$props3","_this$props4","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","ChatBubbleOutlineOutlinedIcon","ShareIcon","DeleteIcon","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","_defineProperty","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","_message$content","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","_this$props$video","getDurationString","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","fromMessageId","currentParams","messages","incompleteResults","store","requestId","query","sender_user_id","from_message_id","limit","finally","total_count","isValidMessage","setItems","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","_this$state5$items","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","_this$props5","setProfileMediaViewerContent","handleOpenChat","_this$props6","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","_this$props7","theme","counters","migratedCounters","_this$props8","_this$props9","_counters$map","el","_counters$map2","_slicedToArray","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","_getUrlMentionHashtag","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","ErrorOutlineIcon","wordWrap","AlternateEmailIcon","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","SearchIcon","openIcon","SharedMediaBase","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","_toConsumableArray","callback","getSearchFilter","_args2","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","_args3","searchItems","searchMigratedItems","_args4","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","_SharedMediaBase","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","PinIcon","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","ErrorIcon","PendingIcon","SentIcon","SucceededIcon","isMessageUnread","DialogMeta","getLastMessageDate","_Component","previousChatId","handleContextMenu","contextMenuId","canTogglePin","canToggleArchive","canMute","canPinChats","canAddChatToList","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","isChatArchived","isChatSecret","chat_list","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","UnarchiveIcon","ArchiveIcon","UnpinIcon","UserIcon","GroupIcon","getViewInfoTitle","UnmuteIcon","MuteIcon","MessageIcon","UnreadIcon","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","overScanCount","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","CacheManager","_load","_save","_remove","removeItem","_clear","clear","_EventEmitter","CacheStore","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","_yield$Promise$all","_yield$Promise$all2","files","dropCache","load","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","_getCache","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","t1","_saveInternal","results","getCache","save","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","ChannelIcon","SavedIcon","SettingsIcon","HelpIcon","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","_React$Component2","_super2","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","fistSliceLoaded","cacheItems","orderedChatIds","a","b","orderCompare","isDifferentOrder","_onLoadNext","offsetOrder","offsetChatId","offsetChat","CHAT_SLICE_LIMIT","log","shift","replaceChats","getListRef","appendChats","newChats","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","trimmedText","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","linkMessage","messageLinkInfo","_linkMessage","includes","splice","recentlyFound","substr","SEARCH_GLOBAL_TEXT_MIN","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","savedMessagesPromise","category","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","MoreIcon","LogOutIcon","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","EditIcon","DataIcon","FilterIcon","LanguageIcon","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","_Array$from","_Array$from2","_yield$readImageSize","_yield$readImageSize2","_toArray","readImageSize","fileURL","defaultURL","_getFitSize","getFitSize","fitWidth","fitHeight","AddImageIcon","multiple","accept","Cropper","margin","aspectRatio","viewMode","guides","CheckIcon","EditProfile","handleUsernameChange","newUsername","newUsername2","usernameRef","usernameCheck","handleChoosePhoto","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","getChatType","Radio","FilterText","Chip","divRef","_this$divRef$current","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","_step2","doubleTransform","_iterator2","currentOffset","prevOffset","setStyleCSSText","_step3","_iterator3","_doubleTransform$get2","_step4","_iterator4","_step5","_iterator5","ContactsIcon","NonContactsIcon","GroupsIcon","ChannelsIcon","BotsIcon","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","MutedIcon","ReadIcon","ArchivedIcon","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","DoneIcon","Suspense","fallback","autoplay","loop","stringData","AddIcon","RemoveIcon","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","_loadData","filterInfo","_i","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","_handleSetOption","ColorizeIcon","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","StopIcon","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","_React$useState","useState","_React$useState2","setContextMenu","_React$useState3","_React$useState4","setTop","_React$useState5","_React$useState6","setLeft","useTranslation","UnblockIcon","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","_loadContent","sessionsCount","usersCount","RemoveMemberIcon","DeviceIcon","CallOutlinedIcon","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","DownloadIcon","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","NextIcon","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicChats","publicItems","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","_userIds","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","_loadCache","_saveCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","AttachFileIcon","canSendMediaMessages","PhotoIcon","InsertDriveFileIcon","canSendPolls","PollIcon","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","_getEntities","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","_assertThisInitialize2","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","_getEntities2","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","_Array$from3","_Array$from4","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","_this$state7","invokeScheduledAction","input_message_content","handleEmojiSelect","native","_ref7","_callee6","_context6","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","_ref8","_callee7","editContent","sendPhoto","iSize","_context7","editMessageMedia","_x8","handleSendMedia","cancelled","recorder","_callee8","constraints","workerOptions","chunks","_context8","getUserMedia","recordPermissionDenied","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","_this$state8","_this$state9","AnimationStore","StickerStore","_this$state10","_getNewItem","_callee9","sendAsFile","_context9","getMediaDocumentFromFile","_x9","_x10","_this$state11","performance","match","emojiRegex","exec","timestamp","stickers","_handleSendFiles","_callee10","_context10","_x11","_editMessageMedia","_callee11","_this$state12","_context11","_x12","_this$state13","_editMessageText","_callee12","_this$state14","_context12","_x13","_x14","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","isMeUser","isDeletedUser","showUsersResult","_callee13","_i3","_user_id","_user","_context13","message_thread_id","notifyDataSetChanged","notify","_this$state15","isMediaEditing","isTextMessage","MicrophoneIcon","SendIcon","InsertEmoticonIcon","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","_options$botStartMess","botUserId","parameter","botStartMessage","sendBotStartMessage","isBotChat","permissions","can_send_messages","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","_loop","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","_amplitudes$i","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","_getCallStatus","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","_getCallStatus2","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","_getCallStatus3","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","_onResult","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","MoreVertIcon","p2pCallsEnabled","PhoneIcon","BroomIcon","BlockIcon","ReportOutlinedIcon","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","counterStr","prevCounter","HeaderCommand","_step$value","_step2$value","_step3$value","canBeDeleted","_step4$value","canBeForwarded","_step5$value","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEditIcon","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOffIcon","VolumeMuteIcon","VolumeDownIcon","VolumeUpIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","RepeatIcon","RepeatOneIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","ShuffleIcon","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","MediaAudio","openInstantViewMedia","MediaVoiceNote","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","_openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","_getCurrentTime","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","_getCurrentTime2","_this$state16","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","_unused2","currentVolume","volumeInterval","_this$state17","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","SkipPreviousIcon","PauseIcon","PlayArrowIcon","SkipNextIcon","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","_this$props10","isEmptySelection","selectMessage","_this$props11","handleDownload","_this$props12","saveBlob","_this$props13","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheckIcon","CopyIcon","RemoveCheckIcon","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","VisibilityIcon","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","CheckMarkIcon","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","_GroupedMessages$getW","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","_message$content2","_message$content3","side","byMinSize","lastSide","lastSize","_sizes$i","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","UnreadSeparator","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","assign","KeyboardButton","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","_data","_message","passwordState","_result","_url","skip_confirm","_url2","in_current_chat","_message2","_sender_id","_via_bot_user_id","inline","_url3","game_short_name","short_name","has_password","showInputPasswordAlert","onError","forward_text","showRequestUrlAlert","setText","openChatSelect","ArrowTopRightIcon","ShareFilledIcon","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","_getTwitterInstagramE","getTwitterInstagramEntities","e1","webPageContent","_this$getMedia","_this$getMedia2","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","ArrowDownwardIcon","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","isCompleteHistory","MESSAGE_SLICE_LIMIT","_assertThisInitialize3","lastRequestKey","loadMigratedHistory","onLoadMigratedHistory","lastRequests","getRequest","insertNext","currentHistory","_assertThisInitialize4","supergroupId","basicGroupChat","_assertThisInitialize5","messagesMap","itemsInView","messageWrapper","_message$props","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","_message$props2","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","separatorMessageId","scrollDownButtonRef","historyEquals","_handleSelectChat","ignoreUnread","previousChat","scrollPosition","scrollMessage","_message$props3","_chatId2","_messageId","_args9","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","getScrollMessage","viewAction","hasFocus","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","LinkIcon","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getChatsPromise","getPublicMessageLink","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","chatsSource","searchResults","globalSearchResults","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMemberIcon","GroupCallSettingsButton","TuneIcon","GroupCallPanel","GroupCallSubtitle","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","_getViewerFile","getViewerFile","_getViewerFile2","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","Player","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","_getViewerFile3","_getViewerFile4","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","SaveIcon","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","ReplyIcon","NavigateBeforeIcon","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","oldUrl","InstantViewStore","getCurrent","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","_getMediaFile","getMediaFile","_getMediaFile2","isVideoMessage","getMediaThumbnail","_getMediaFile3","_getMediaFile4","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","_getMediaFile5","_getMediaFile6","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","_filter","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","PlayIcon","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","_nextIndex","profile_photo_id","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.10b432ca.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender_id } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender: sender_id }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './CallSettingsVideoPreview.css';\n\nclass CallSettingsVideoPreview extends React.Component {\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <div>\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\n            </div>\n        );\n    }\n\n}\n\nCallSettingsVideoPreview.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default CallSettingsVideoPreview;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\n        if (inputAudioStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\n                inputAudioStream.getAudioTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n\n        if (inputVideoStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\n                inputVideoStream.getVideoTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall, currentCall } = CallStore;\n                if (currentGroupCall) {\n                    const { streamManager } = currentGroupCall;\n                    if (!streamManager) return;\n\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                } else if (currentCall) {\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                }\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getVideoTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideoStream,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n\n                        { callId && (\n                            <>\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                                </div>\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\n                                {/*<div>*/}\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\n                                {/*</div>*/}\n                            </>\n                        )}\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallIcon from '@material-ui/icons/Call';\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallSettings from './GroupCallSettings';\nimport MenuIcon from '../../Assets/Icons/More';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { closeCallPanel } from '../../Actions/Call';\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './CallPanel.css';\n\nconst SUPPORTS_ROTATION = true;\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        const { callId } = props;\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false,\n\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.on('updateCall', this.handleUpdateCall);\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.off('updateCall', this.handleUpdateCall);\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    onClientUpdateCallMediaState = update => {\n        const { callId: currentCallId } = this.props;\n        const { callId, mediaState, type } = update;\n        if (callId !== currentCallId) return;\n\n        if (type === 'input') {\n            this.setState({ inputMediaState: mediaState });\n        } else {\n            this.setState({ outputMediaState: mediaState });\n        }\n    };\n\n    handleUpdateCall = update => {\n        this.forceUpdate();\n    };\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        closeCallPanel();\n        setTimeout(() => {\n            CallStore.p2pHangUp(callId, true);\n        }, 100);\n    };\n\n    handleOpenSettings = async event => {\n        this.handleCloseContextMenu();\n\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        if (this.isFullScreen()) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.handleDiscard(null);\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleAudio = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const { muted } = inputMediaState;\n\n        CallStore.p2pAudioEnabled(muted);\n    };\n\n    handleVideo = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const muted = inputMediaState.videoState === 'inactive';\n\n        CallStore.p2pVideoEnabled(muted)\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\n        const { currentCall } = CallStore;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId, is_outgoing, state } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        let outputVideoStyle = null;\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\n            outputVideoStyle = {\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\n            };\n        }\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        <div className='group-call-join-panel-subtitle'>\n                            {p2pGetCallStatus(callId)}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleOpenSettings}>\n                                <ListItemText primary={t('Settings')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\n                </div>\n                { outputMediaState && outputMediaState.muted && (\n                    <div className='call-panel-microphone-hint'>\n                        <div className='call-panel-microphone-hint-wrapper'>\n                            <MicOffIcon/>\n                            <div className='call-panel-microphone-hint-text'>\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className='group-call-panel-buttons'>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\n                        <div className='group-call-panel-button'>\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                                <CallIcon />\n                            </div>\n                            <div className='group-call-panel-button-text'>\n                                {t('VoipAnswerCall')}\n                            </div>\n                        </div>\n                    )}\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\n                        </div>\n                    </div>\n                </div>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender_id} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_id } = last_message;\n        if (sender_id.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_id } = last_message;\n                switch (sender_id['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender_id.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender_id.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        return;\n\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: 300\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_id.user_id && chatSearch ? (\n                <UserTile userId={sender_id.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_id.user_id) {\n                users.set(messages.messages[i].sender_id.user_id, messages.messages[i].sender_id.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender_id } = message;\n                if (sender_id && sender_id.user_id) {\n                    users.set(sender_id.user_id, sender_id.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_id.user_id) {\n                users.set(result.messages[i].sender_id.user_id, result.messages[i].sender_id.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SectionHeader from '../SectionHeader';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacyCalls.css';\n\nclass PrivacyCalls extends React.Component {\n    state = {\n        prevAllowCalls: null,\n        prevAllowP2PCalls: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { allowCalls, allowP2PCalls } = props;\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\n            const allowCallsValue = allowCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            return {\n                prevAllowCalls: allowCalls,\n                prevAllowP2PCalls: allowP2PCalls,\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\n            }\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.setSettings();\n    }\n\n    setSettings() {\n        const { allowCalls, allowP2PCalls } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\n                rules\n            });\n        }\n\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowP2PCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowP2PCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowP2PCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\n                rules\n            });\n        }\n    }\n\n    handleChangeAllowCalls = event => {\n        this.setState({\n            allowCallsValue: event.currentTarget.value\n        });\n    };\n\n    handleChangeAllowP2PCalls = event => {\n        this.setState({\n            allowP2PCallsValue: event.currentTarget.value\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Calls')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nPrivacyCalls.propTypes = {\n    allowCalls: PropTypes.object.isRequired,\n    allowP2PCalls: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(PrivacyCalls);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\nimport PrivacyCalls from './PrivacyCalls';\nimport { CallOutlined } from '@material-ui/icons';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        openActiveSessions: false,\n\n        users: null,\n        openBlockedUsers: false,\n\n        allowCalls: null,\n        allowP2PCalls: null,\n        openCalls: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\n        }).catch(() => null));\n\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\n\n        this.setState({\n            sessions,\n            users,\n            allowCalls,\n            allowP2PCalls\n        });\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    openCalls = () => {\n        const { allowCalls, allowP2PCalls } = this.state;\n        if (!allowCalls || !allowP2PCalls) return;\n\n        this.setState({\n            openCalls: true\n        });\n    };\n\n    closeCalls = () => {\n        this.setState({\n            openCalls: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            openBlockedUsers, users,\n            openActiveSessions, sessions,\n            openCalls, allowCalls, allowP2PCalls\n        } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openCalls}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('Calls')}\n                                secondary={''}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        const isCall = isCallMessage(chatId, messageId);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender_id, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender_id.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, via_bot_user_id } = message;\n                let userId = sender_id.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\n\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {showMeta && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_id, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender_id, prevMessage.sender_id) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-28px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender_id } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender_id.user_id ? <UserTile userId={sender_id.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender_id} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\n                {Boolean(callId) && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}