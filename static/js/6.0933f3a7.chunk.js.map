{"version":3,"sources":["Components/ColumnMiddle/AnimationPreview.js","Components/ColumnMiddle/StickerSet.js","Components/ColumnMiddle/StickersPickerHeader.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/GifsPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["AnimationPreview","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","animation","this","props","React","createElement","className","Animation","type","stretch","style","borderRadius","Component","StickerSet","nextProps","nextState","nextContext","info","_this$props","onSelect","onMouseDown","onMouseEnter","onDeleteClick","title","items","stickers","map","x","i","sticker","id","data-sticker-id","onClick","width","STICKER_SMALL_DISPLAY_SIZE","height","Sticker","autoplay","blur","displaySize","preview","source","StickerSourceEnum","PICKER","IconButton","aria-label","classes","root","size","ClearIcon","fontSize","StickersPickerHeader","_this","call","onClientUpdateStickerSetPosition","update","position","setState","scrollToPosition","state","_assertThisInitialize","_assertThisInitialized","animator","anchorRef","scroll","scrollRef","current","anchor","anchorNode","ReactDOM","scrollFrom","scrollLeft","scrollTo","anchorFrom","Number","left","replace","anchorTo","stop","Animator","from","to","func","Math","abs","sign","setTimeout","start","handleWheel","event","deltaX","deltaY","handleSelect","indexOf","createRef","StickerStore","on","off","prevProps","prevState","snapshot","_this2","_this$props2","recent","recentItem","AccessTimeIcon","play","PICKER_HEADER","openMedia","ref","classNames","onWheel","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","StickersPicker","onUpdateInstalledStickerSets","is_masks","sticker_set_ids","filterSets","onUpdateRecentStickers","reloadRecentContent","scrollTop","loadContent","_ref","_asyncToGenerator","_callee","stickerSets","sets","promises","slicedSets","headerStickers","_context","TdLibController","send","is_attached","set_id","all","reduce","set","fullSets","setsLength","_x","_x2","_x3","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","padding","inViewItems","item","itemsMap","get","node","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","FileStore","getStore","loadedSets","has","loadStickerSetContent","updatePosition","_this$state","minDiff","scrollHeight","startPosition","element","diff","pos","clientUpdate","handleScroll","_callee2","now","loadChunk","_this$state2","_context2","scrolling","Date","lastScrollTime","scrollTimer","clearTimeout","loadingChunk","finally","concat","loadPreviewContent","stickerId","_this$state3","getStickers","find","loadStickerContent","getNeighborStickersFromSets","handleMouseEnter","currentTarget","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","_this$state4","handleMouseDown","timestamp","showPreview","cancelSend","_this$state5","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","handleSelectSet","_ref3","_callee3","_this$state6","concatSets","_context3","_x4","handleDeleteRecent","handleDeleteStickerSet","is_installed","Map","debounce","throttle","_this$state7","_this$state8","_reloadRecentContent","_callee4","_context4","t","_this$state9","clear","el","recentInfo","onScroll","Boolean","enhance","compose","withSaveRef","withTranslation","withRestoreRef","GifsPicker","_this$scrollRef$curre","begin","end","cancel","prevScrollTop","savedAnimations","AnimationStore","animations","inViewMap","inViewIndexes","index","animationsInView","mapEquals","animationIndex","openAnimation","_loadContent","forceUpdate","loadAnimationThumbnailContent","loadAnimationContent","_this3","data-animation-index","margin","EmojiPickerButton","onClientUpdateChange","open","removePicker","picker","handleButtonMouseEnter","buttonEnter","updatePicker","loadStickerSets","loadSavedAnimations","tab","gifsPicker","gifsPickerRef","EMOJI_PICKER_TIMEOUT_MS","stickersPickerRef","loadRecentStickersContent","loadStickerThumbnailContent","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","handleEmojiClick","stickersPicker","handleStickersClick","handleGifsClick","handleStickerSend","handleStickerPreview","handleGifSend","handleGifPreview","emojiPickerRef","AppStore","LocalizationStore","theme","i18n","search","notfound","skintext","categories","people","nature","foods","activity","places","objects","symbols","flags","custom","EmojiPicker","showSkinTones","color","palette","primary","dark","native","isAppleDevice","overflowX","top","Fragment","rel","href","onMouseLeave","InsertEmoticonIcon","Button","StickerPreview","withTheme"],"mappings":"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","file":"static/js/6.0933f3a7.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animation from '../Message/Media/Animation';\nimport './StickerPreview.css';\n\nclass AnimationPreview extends React.Component {\n    render() {\n        const { animation } = this.props;\n        if (!animation) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <Animation\n                    type='preview'\n                    stretch={true}\n                    animation={animation}\n                    style={{ borderRadius: 0 }}\n                />\n            </div>\n        );\n    }\n}\n\nAnimationPreview.propTypes = {\n    animation: PropTypes.object\n};\n\nexport default AnimationPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport './StickerSet.css';\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info } = this.props;\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { info, onSelect, onMouseDown, onMouseEnter, onDeleteClick } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className='sticker-set-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseEnter={onMouseEnter}\n                onMouseDown={onMouseDown}\n                style={{\n                    width: STICKER_SMALL_DISPLAY_SIZE,\n                    height: STICKER_SMALL_DISPLAY_SIZE\n                }}>\n                <Sticker\n                    key={x.sticker.id}\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.PICKER}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className='sticker-set-title'>\n                    <div className='sticker-set-title-wrapper'>\n                        <span>{title}</span>\n                    </div>\n                    {onDeleteClick && (\n                        <IconButton\n                            aria-label='delete'\n                            classes={{ root: 'sticker-set-icon-root' }}\n                            size='small'\n                            onClick={onDeleteClick}>\n                            <ClearIcon fontSize='inherit' />\n                        </IconButton>\n                    )}\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired,\n    onDeleteClick: PropTypes.func\n};\n\nexport default StickerSet;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n\n        this.state = { position: 0 };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    onClientUpdateStickerSetPosition = update => {\n        const { position } = update;\n\n        // console.log('[header] setPosition', position);\n        this.setState({ position });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.position !== this.state.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.state;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n\n        const scrollFrom = scroll.scrollLeft;\n        const scrollTo = position * 48 - 147;\n\n        const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n        const anchorTo = position * 48;\n\n        if (animator) {\n            animator.stop();\n        }\n\n        this.animator = new Animator(0, [\n            {\n                from: scrollFrom,\n                to: scrollTo,\n                func: left => (scroll.scrollLeft = left)\n            },\n            {\n                from:\n                    Math.abs(anchorTo - anchorFrom) > 338\n                        ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338\n                        : anchorFrom,\n                to: anchorTo,\n                func: left => (anchorNode.style.left = left + 'px')\n            }\n        ]);\n\n        setTimeout(() => {\n            if (!this.animator) return;\n\n            this.animator.start();\n        }, 0);\n        // this.animator.start();\n    };\n\n    handleWheel = event => {\n        const { scrollRef } = this;\n\n        if (event.deltaX === 0) {\n            const scroll = scrollRef.current;\n\n            scroll.scrollLeft += event.deltaY;\n        }\n    };\n\n    handleSelect = sticker => {\n        const { stickers, onSelect } = this.props;\n\n        // console.log('[header] handleSelect', stickers.indexOf(sticker));\n        onSelect(stickers.indexOf(sticker));\n    };\n\n    render() {\n        const { recent, stickers } = this.props;\n\n        const recentItem = recent ?\n            <div\n                className='stickers-picker-header-recent'\n                onClick={() => this.handleSelect('recent')}>\n                <AccessTimeIcon/>\n            </div> :\n            null;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                sticker={x}\n                play={false}\n                autoplay={false}\n                blur={false}\n                displaySize={36}\n                preview\n                source={StickerSourceEnum.PICKER_HEADER}\n                openMedia={() => this.handleSelect(x)}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker-header'>\n                <div ref={this.scrollRef} className={classNames('stickers-picker-header-scroll', 'scrollbars-hidden')} onWheel={this.handleWheel}>\n                    <div className='stickers-picker-header-items'>\n                        {recentItem}\n                        {items}\n                    </div>\n                    <div ref={this.anchorRef} className='stickers-picker-header-anchor' />\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    recent: PropTypes.object,\n    stickers: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default StickersPickerHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport StickerSet from './StickerSet';\nimport StickersPickerHeader from './StickersPickerHeader';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            recent: null,\n            stickerSets: null,\n            sets: [],\n            headerStickers: [],\n            position: 0\n        };\n\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\n        this.updatePosition = throttle(this.updatePosition, 250);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { position, recent, stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.recent !== recent) {\n            return true;\n        }\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        if (nextState.position !== position) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n        StickerStore.on('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n        StickerStore.off('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n\n    stop() {\n\n    }\n\n    onUpdateInstalledStickerSets = update => {\n        const { is_masks, sticker_set_ids } = update;\n        if (!is_masks) return;\n\n        this.filterSets();\n    };\n\n    onUpdateRecentStickers = update => {\n        this.reloadRecentContent();\n    };\n\n    filterSets(sticker_set_ids) {\n        const { sets, stickerSets } = this.state;\n    }\n\n    async reloadRecentContent() {\n        const recent = await TdLibController.send({\n            '@type': 'getRecentStickers',\n            is_attached: false\n        });\n\n        this.setState({\n            recent\n        });\n    }\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    loadContent = async (recent, stickerSets, sets) => {\n        // console.log('[sp] loadContent', recent, stickerSets, sets);\n\n        if (!recent) {\n            recent = await TdLibController.send({\n                '@type': 'getRecentStickers',\n                is_attached: false\n            });\n        }\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        const headerStickers = sets.reduce((preview, set) => {\n            if (set.stickers.length > 0) {\n                preview.push(set.stickers[0]);\n            }\n            return preview;\n        }, []);\n\n        this.setState({\n            recent,\n            stickerSets,\n            sets: slicedSets,\n            fullSets: sets,\n            headerStickers\n        });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent(400);\n    };\n\n    loadInViewContent = (padding = 0) => {\n        // console.log('[sp] loadInViewContent');\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    updatePosition = () => {\n        const scroll = this.scrollRef.current;\n\n        const { recent, sets } = this.state;\n        let minDiff = scroll.scrollHeight;\n        let position = 0;\n        let startPosition = 0;\n        if (recent && recent.stickers.length > 0) {\n            startPosition = 1;\n            const element = this.itemsMap.get('recent');\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node && node.offsetTop <= scroll.scrollTop) {\n                    const offsetTop = node.offsetTop;\n                    if (node && offsetTop <= scroll.scrollTop) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = 0;\n                        }\n                    }\n                }\n            }\n        }\n        sets.forEach((x, pos) => {\n            const element = this.itemsMap.get(x.id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node && node.offsetTop <= scroll.scrollTop) {\n                    const offsetTop = node.offsetTop;\n                    if (node) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = startPosition + pos;\n                        }\n                    }\n                }\n            }\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSetPosition',\n            position\n        });\n    };\n\n    handleScroll = async () => {\n        this.scrolling = true;\n        const now = new Date();\n        this.lastScrollTime = now;\n        if (this.scrollTimer) clearTimeout(this.scrollTimer);\n        this.scrollTimer = setTimeout(() => {\n            if (now !== this.lastScrollTime) return;\n\n            this.scrolling = false;\n        }, 250);\n\n        // console.log('[sp] handleScroll');\n        //this.loadInViewContentOnScroll();\n        this.loadInViewContentOnScrollEnd();\n        this.updatePosition();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => {\n            this.loadingChunk = false;\n        });\n\n        this.setsLength += result.length;\n        this.setState({ sets: sets.concat(result) });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { recent, sets } = this.state;\n\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { recent, sets } = this.state;\n\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { recent, sets } = this.state;\n\n                    const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    handleSelectSet = async position => {\n        const { sets, stickerSets } = this.state;\n        const { scrollRef } = this;\n\n        if (position === -1) {\n            const scroll = scrollRef.current;\n            scroll.scrollTop = 0;\n        } else if (position < sets.length) {\n            const element = this.itemsMap.get(sets[position].id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    const scroll = scrollRef.current;\n                    scroll.scrollTop = node.offsetTop;\n                }\n            }\n        } else if (position < stickerSets.sets.length) {\n            if (this.loadingChunk) return;\n            if (stickerSets.sets.length === sets.length) return;\n\n            this.loadingChunk = true;\n            const promises = [];\n            stickerSets.sets.slice(this.setsLength, position + 1).forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n            this.setsLength += result.length;\n            let concatSets = sets.concat(result);\n            this.setState({ sets: concatSets }, () => {\n                if (position < concatSets.length) {\n                    this.handleSelectSet(position);\n                }\n            });\n        }\n    };\n\n    handleDeleteRecent = () => {\n        TdLibController.send({\n            '@type': 'clearRecentStickers',\n            is_attached: false\n        });\n    };\n\n    handleDeleteStickerSet = id => {\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: id,\n            is_installed: false\n        });\n    };\n\n    render() {\n        const { t, style } = this.props;\n        const { recent, stickerSets, sets, headerStickers } = this.state;\n        // console.log('[sp] render', recent, stickerSets, sets);\n        // if (!stickerSets) return null;\n        //\n        // if (!sets) return null;\n        // if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseEnter={this.handleMouseEnter}\n            />\n        ));\n\n        const recentInfo =\n            recent && recent.stickers.length > 0\n                ? {\n                      stickers: recent.stickers,\n                      title: t('RecentStickers')\n                  }\n                : null;\n\n        return (\n            <div className='stickers-picker' style={style}>\n                <StickersPickerHeader\n                    recent={recentInfo}\n                    stickers={headerStickers}\n                    onSelect={this.handleSelectSet} />\n                <div ref={this.scrollRef} className={classNames('stickers-picker-scroll', 'scrollbars-hidden')} onScroll={this.handleScroll}>\n                    {Boolean(recentInfo) && (\n                        <StickerSet\n                            ref={el => this.itemsMap.set('recent', el)}\n                            info={recentInfo}\n                            onSelect={this.handleStickerSelect}\n                            onMouseDown={this.handleMouseDown}\n                            onMouseEnter={this.handleMouseEnter}\n                            onDeleteClick={this.handleDeleteRecent}\n                        />\n                    )}\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(StickersPicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Animation from '../Message/Media/Animation';\nimport { loadAnimationContent, loadAnimationThumbnailContent } from '../../Utils/File';\nimport { mapEquals, debounce, throttle } from '../../Utils/Common';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GifsPicker.css'\n\nclass GifsPicker extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 250);\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 250);\n    }\n\n    start() {\n        this.loadInViewContent();\n    }\n\n    stop() {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAnimationsInView',\n            animations: new Map()\n        })\n    }\n\n    handleScroll = event => {\n        const { scrollTop, scrollHeight, offsetHeight } = this.scrollRef.current;\n\n        this.loadInViewContentOnScrollEnd();\n\n        const begin = scrollTop <= 10;\n        const end = scrollHeight - (scrollTop + offsetHeight) <= 10;\n        const cancel = Math.abs(scrollTop - this.prevScrollTop) > 50 && !begin && !end; // too fast\n\n        // console.log('[gp] handleScroll', Math.abs(scrollTop - this.prevScrollTop), scrollTop, this.prevScrollTop, begin, end);\n        this.prevScrollTop = scrollTop;\n        if (cancel) {\n            // console.log('[gp] cancel handleScroll', scrollTop - this.prevScrollTop);\n            return;\n        }\n\n        this.loadInViewContent();\n    };\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    async loadContent() {\n        // console.log('[gp] loadContent');\n\n        let { savedAnimations } = AnimationStore;\n        if (!savedAnimations) {\n            const result = await TdLibController.send({\n                '@type': 'getSavedAnimations'\n            });\n\n            AnimationStore.savedAnimations = result;\n            savedAnimations = result;\n\n            this.forceUpdate(() => {\n                this.start();\n            });\n        }\n\n        // load content\n        const store = FileStore.getStore();\n        const previewAnimations = savedAnimations.animations.slice(0, 1000);\n\n        // console.log('[sp] loadAnimationThumbnailContent', previewAnimations);\n        previewAnimations.forEach(x => {\n            loadAnimationThumbnailContent(store, x, null);\n            loadAnimationContent(store, x, null, false);\n        });\n    }\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContent = (padding = 0) => {\n        // console.log('[gp] loadInViewContent');\n        const scroll = this.scrollRef.current;\n\n        const { savedAnimations } = AnimationStore;\n        if (!savedAnimations) return;\n\n        const { animations } = savedAnimations;\n\n        const inViewMap = new Map();\n        const inViewIndexes = [];\n        animations.forEach((x, index) => {\n            const item = this.itemsMap.get(`${index}_${x.animation.id}`);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewMap.set(x, x);\n                    inViewIndexes.push(index);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewMap.set(x, x);\n                    inViewIndexes.push(index);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewMap.set(x, x);\n                    inViewIndexes.push(index);\n                }\n            }\n        });\n\n        const { animationsInView } = AnimationStore;\n        if (mapEquals(animationsInView, inViewMap)) {\n            // console.log('[gp] inViewItems equals', inViewIndexes, animationsInView);\n            return;\n        }\n\n\n        // console.log('[gp] inViewItems', inViewIndexes);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAnimationsInView',\n            animations: inViewMap\n        })\n\n        // inViewItems.forEach(x => {\n        //     const store = FileStore.getStore();\n        //     if (!this.loadedSets.has(x.id)) {\n        //         this.loadedSets.set(x.id, x.id);\n        //         loadStickerSetContent(store, x);\n        //     }\n        // });\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.animationIndex);\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { recent, sets } = this.state;\n\n                    const { savedAnimations } = AnimationStore;\n\n                    const sticker = savedAnimations.animations[stickerId];\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        // this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.animationIndex);\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        // this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { savedAnimations } = AnimationStore;\n\n        const sticker = savedAnimations.animations[stickerId];\n        onPreview(sticker);\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    openAnimation = animation => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(animation);\n    };\n\n    render() {\n        const { t, style } = this.props;\n        const { savedAnimations } = AnimationStore;\n        if (!savedAnimations) return null;\n\n        this.itemsMap.clear();\n        const items = savedAnimations.animations.map((x, index) => (\n            <div\n                data-animation-index={index}\n                key={`${index}_${x.animation.id}`}\n                ref={el => this.itemsMap.set(`${index}_${x.animation.id}`, el)}\n                onMouseDown={this.handleMouseDown}\n                onMouseEnter={this.handleMouseEnter}\n                >\n                <Animation\n                    type='picker'\n                    animation={x}\n                    openMedia={() => this.openAnimation(x)}\n                    style={{ width: 104, height: 104, margin: 2, borderRadius: 0 }}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='gifs-picker' style={style}>\n                <div ref={this.scrollRef} className={classNames('gifs-picker-scroll', 'scrollbars-hidden')} onScroll={this.handleScroll}>\n                    {items}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nGifsPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(GifsPicker);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport { Picker as EmojiPicker } from 'emoji-mart';\n// import { NimblePicker as EmojiPicker } from 'emoji-mart';\n// import data from 'emoji-mart/data/messenger.json'\nimport AnimationPreview from './AnimationPreview';\nimport StickerPreview from './StickerPreview';\nimport StickersPicker from './StickersPicker';\nimport GifsPicker from './GifsPicker';\nimport { isAppleDevice } from '../../Utils/Common';\nimport { loadStickerThumbnailContent, loadStickerSetContent, loadRecentStickersContent, loadAnimationThumbnailContent } from '../../Utils/File';\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tab: 0\n        };\n\n        this.emojiPickerRef = React.createRef();\n        this.stickersPickerRef = React.createRef();\n        this.gifsPickerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        const { open } = this.state;\n\n        if (open) {\n            this.removePicker = true;\n        } else {\n            this.picker = null;\n        }\n    };\n\n    handleButtonMouseEnter = event => {\n        this.buttonEnter = true;\n        setTimeout(() => {\n            if (!this.buttonEnter) return;\n\n            this.updatePicker(true);\n            this.loadStickerSets();\n            this.loadSavedAnimations();\n\n            if (this.state.tab === 2) {\n                const gifsPicker = this.gifsPickerRef.current;\n                if (gifsPicker) {\n                    gifsPicker.start();\n                }\n            }\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    loadSavedAnimations = async () => {\n        let { savedAnimations } = AnimationStore;\n        if (!savedAnimations) {\n            const result = await TdLibController.send({\n                '@type': 'getSavedAnimations'\n            });\n\n            AnimationStore.savedAnimations = result;\n            savedAnimations = result;\n        }\n\n        // load content\n        const store = FileStore.getStore();\n        const previewAnimations = savedAnimations.animations.slice(0, 1000);\n\n        // console.log('[sp] loadAnimationThumbnailContent', previewAnimations);\n        previewAnimations.forEach(x => {\n            loadAnimationThumbnailContent(store, x);\n        });\n    };\n\n    loadStickerSets = async () => {\n        if (this.sets) return;\n\n        this.recent = await TdLibController.send({\n            '@type': 'getRecentStickers',\n            is_attached: false\n        });\n\n        this.stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        const promises = [];\n        this.stickerSets.sets.forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        this.sets = await Promise.all(promises);\n\n        const node = this.stickersPickerRef.current;\n\n        const store = FileStore.getStore();\n        loadRecentStickersContent(store, this.recent);\n\n        const previewSets = this.sets.slice(0, 5).reverse();\n        previewSets.forEach(x => {\n            loadStickerSetContent(store, x);\n            node.loadedSets.set(x.id, x.id);\n        });\n\n        const previewStickers = this.sets.reduce((stickers, set) => {\n            if (set.stickers.length > 0) {\n                stickers.push(set.stickers[0]);\n            }\n            return stickers;\n        }, []);\n        previewStickers.forEach(x => {\n            loadStickerThumbnailContent(store, x);\n        });\n    };\n\n    handleButtonMouseLeave = () => {\n        this.buttonEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    tryClosePicker = () => {\n        // return;\n\n        const { animation, sticker } = this.state;\n        if (this.paperEnter || this.buttonEnter || sticker || animation) return;\n\n        this.updatePicker(false);\n    };\n\n    handlePaperMouseEnter = () => {\n        this.paperEnter = true;\n    };\n\n    handlePaperMouseLeave = () => {\n        // return;\n\n        this.paperEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    updatePicker = open => {\n        this.setState({ open }, () => {\n            if (!this.state.open) {\n                if (this.removePicker) {\n                    this.picker = null;\n                    this.removePicker = false;\n                }\n\n                const gifsPicker = this.gifsPickerRef.current;\n                if (gifsPicker) {\n                    gifsPicker.stop();\n                }\n            }\n        });\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n\n        const gifsPicker = this.gifsPickerRef.current;\n        if (gifsPicker) {\n            gifsPicker.stop();\n        }\n\n        const stickersPicker = this.stickersPickerRef.current;\n        if (stickersPicker) {\n            stickersPicker.stop();\n        }\n    };\n\n    handleStickersClick = () => {\n        const stickersPicker = this.stickersPickerRef.current;\n        const { tab } = this.state;\n\n        // console.log('[sp] handleStickersClick');\n\n        if (tab === 1) {\n            if (stickersPicker) {\n                stickersPicker.scrollTop();\n            }\n        } else {\n            setTimeout(() => {\n                // console.log('[sp] handleStickersClick.loadContent');\n                stickersPicker.loadContent(this.recent, this.stickerSets, this.sets);\n            }, 150);\n\n            this.setState({ tab: 1 });\n        }\n\n        const gifsPicker = this.gifsPickerRef.current;\n        if (gifsPicker) {\n            gifsPicker.stop();\n        }\n    };\n\n    handleGifsClick = () => {\n        const gifsPicker = this.gifsPickerRef.current;\n        const { tab } = this.state;\n\n        if (tab === 2) {\n            if (gifsPicker) {\n                gifsPicker.scrollTop();\n            }\n        } else {\n            const { savedAnimations } = AnimationStore;\n\n            setTimeout(() => {\n                gifsPicker.loadContent(savedAnimations);\n                gifsPicker.start();\n            }, 150);\n\n            this.setState({ tab: 2 });\n        }\n\n        const stickersPicker = this.stickersPickerRef.current;\n        if (stickersPicker) {\n            stickersPicker.stop();\n        }\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleStickerPreview = sticker => {\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n\n        if (!sticker) {\n            this.tryClosePicker();\n        }\n    };\n\n    handleGifSend = animation => {\n        if (!animation) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAnimationSend',\n            animation\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleGifPreview = animation => {\n        this.setState({ animation });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAnimationPreview',\n            animation\n        });\n\n        if (!animation) {\n            this.tryClosePicker();\n        }\n    };\n\n    render() {\n        const { theme, t } = this.props;\n        const { open, tab, animation, sticker } = this.state;\n\n        if (open && !this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    ref={this.emojiPickerRef}\n                    // data={data}\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    native={isAppleDevice()}\n                    style={{ width: 338, overflowX: 'hidden', position: 'absolute', left: 0, top: 0 }}\n                />\n            );\n\n            this.stickersPicker = (\n                <StickersPicker\n                    ref={this.stickersPickerRef}\n                    onSelect={this.handleStickerSend}\n                    onPreview={this.handleStickerPreview}\n                    style={{ position: 'absolute', left: 338, top: 0 }}\n                />\n            );\n\n            this.gifsPicker = (\n                <GifsPicker\n                    ref={this.gifsPickerRef}\n                    onSelect={this.handleGifSend}\n                    onPreview={this.handleGifPreview}\n                    style={{ width: 338, overflowX: 'hidden', position: 'absolute', left: 676, top: 0 }}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Emoticon'\n                    onMouseEnter={this.handleButtonMouseEnter}\n                    onMouseLeave={this.handleButtonMouseLeave}>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <div\n                    className={classNames('emoji-picker-root', { 'emoji-picker-root-opened': open })}\n                    onMouseEnter={this.handlePaperMouseEnter}\n                    onMouseLeave={this.handlePaperMouseLeave}>\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 }, { 'emoji-picker-content-gifs': tab === 2 })}>\n                        {this.picker}\n                        {this.stickersPicker}\n                        {this.gifsPicker}\n                    </div>\n                    <div className='emoji-picker-header'>\n                        <Button\n                            color={tab === 0 ? 'primary' : 'default'}\n                            className='emoji-picker-header-button'\n                            onClick={this.handleEmojiClick}>\n                            {t('Emoji')}\n                        </Button>\n                        <Button\n                            color={tab === 1 ? 'primary' : 'default'}\n                            className='emoji-picker-header-button'\n                            onClick={this.handleStickersClick}>\n                            {t('AccDescrStickers')}\n                        </Button>\n                        <Button\n                            color={tab === 2 ? 'primary' : 'default'}\n                            className='emoji-picker-header-button'\n                            onClick={this.handleGifsClick}>\n                            {t('AttachGif')}\n                        </Button>\n                    </div>\n                </div>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n                {Boolean(animation) && <AnimationPreview animation={animation} />}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withTheme\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}